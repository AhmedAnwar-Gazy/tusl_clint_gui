-- SQLite Database Setup and Sample Data
-- Enable foreign key support
PRAGMA foreign_keys = ON;

-- Drop tables if they exist (in reverse order of dependencies)
DROP TABLE IF EXISTS user_settings;
DROP TABLE IF EXISTS sessions;
DROP TABLE IF EXISTS blocked_users;
DROP TABLE IF EXISTS contacts;
DROP TABLE IF EXISTS messages;
DROP TABLE IF EXISTS media;
DROP TABLE IF EXISTS chat_participants;
DROP TABLE IF EXISTS chats;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS userinfo;

-- Create tables
CREATE TABLE users (
    user_id INTEGER PRIMARY KEY AUTOINCREMENT,
    phone_number TEXT ,
    username TEXT UNIQUE,
    first_name TEXT ,
    last_name TEXT,
    bio TEXT,
    password TEXT,
    profile_picture_url TEXT,
    hashed_password TEXT,
    two_factor_secret TEXT,
    last_seen_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    is_online INTEGER DEFAULT 0 CHECK(is_online IN (0,1)),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP 
);

CREATE TABLE chats (
    chat_id INTEGER PRIMARY KEY AUTOINCREMENT,
    chat_type TEXT  CHECK(chat_type IN ('private', 'group', 'channel')),
    chat_name TEXT,
    chat_description TEXT,
    chat_picture_url TEXT,
    creator_user_id INTEGER,
    public_link TEXT UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    FOREIGN KEY (creator_user_id) REFERENCES users(user_id) ON DELETE SET NULL
);

CREATE TABLE userinfo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    phone_number TEXT ,
    password TEXT ,
    is_enable INTEGER DEFAULT 0
);

CREATE TABLE chat_participants (
    chat_participant_id INTEGER PRIMARY KEY AUTOINCREMENT,
    chat_id INTEGER ,
    user_id INTEGER ,
    role TEXT DEFAULT 'member' CHECK(role IN ('member', 'admin', 'creator', 'moderator')),
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    muted_until TIMESTAMP,
    is_pinned INTEGER DEFAULT 0 CHECK(is_pinned IN (0,1)),
    unread_count INTEGER DEFAULT 0,
    last_read_message_id INTEGER,
    UNIQUE (chat_id, user_id),

    FOREIGN KEY (chat_id) REFERENCES chats(chat_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (last_read_message_id) REFERENCES messages(message_id) ON DELETE SET NULL
);

CREATE TABLE media (
    media_id INTEGER PRIMARY KEY AUTOINCREMENT,
    uploader_user_id INTEGER,
    file_name TEXT ,
    file_path_or_url TEXT ,
    mime_type TEXT ,
    file_size_bytes INTEGER ,
    thumbnail_url TEXT,
    duration_seconds INTEGER,
    width INTEGER,
    height INTEGER,
    uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    transferId TEXT,
    FOREIGN KEY (uploader_user_id) REFERENCES users(user_id) ON DELETE SET NULL
);

CREATE TABLE messages (
    message_id INTEGER PRIMARY KEY AUTOINCREMENT,
    chat_id INTEGER ,
    sender_user_id INTEGER,
    message_type TEXT  DEFAULT 'text' CHECK(message_type IN (
        'text', 'image', 'video', 'audio','voiceNote', 'file', 'sticker', 'gif', 'system_event'
    )),
    content TEXT,
    media_id INTEGER,
    replied_to_message_id INTEGER,
    forwarded_from_user_id INTEGER,
    forwarded_from_chat_id INTEGER,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    edited_at TIMESTAMP,
    is_deleted INTEGER DEFAULT 0 CHECK(is_deleted IN (0,1)),
    view_count INTEGER DEFAULT 0,
    FOREIGN KEY (chat_id) REFERENCES chats(chat_id) ON DELETE CASCADE,
    FOREIGN KEY (sender_user_id) REFERENCES users(user_id) ON DELETE SET NULL,
    FOREIGN KEY (media_id) REFERENCES media(media_id) ON DELETE SET NULL,
    FOREIGN KEY (replied_to_message_id) REFERENCES messages(message_id) ON DELETE SET NULL,
    FOREIGN KEY (forwarded_from_user_id) REFERENCES users(user_id) ON DELETE SET NULL,
    FOREIGN KEY (forwarded_from_chat_id) REFERENCES chats(chat_id) ON DELETE SET NULL
);

CREATE TABLE contacts (
    contact_id INTEGER PRIMARY KEY AUTOINCREMENT,
    owner_user_id INTEGER ,
    contact_user_id INTEGER ,
    alias_name TEXT,
    added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    UNIQUE (owner_user_id, contact_user_id),
    FOREIGN KEY (owner_user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (contact_user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE blocked_users (
    block_id INTEGER PRIMARY KEY AUTOINCREMENT,
    blocker_user_id INTEGER ,
    blocked_user_id INTEGER ,
    blocked_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    UNIQUE (blocker_user_id, blocked_user_id),
    FOREIGN KEY (blocker_user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (blocked_user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE sessions (
    session_id TEXT PRIMARY KEY DEFAULT (lower(hex(randomblob(16)))),
    user_id INTEGER ,
    device_info TEXT,
    ip_address TEXT,
    last_active_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    expires_at TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE user_settings (
    user_setting_id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER UNIQUE ,
    privacy_phone_number TEXT DEFAULT 'my_contacts' CHECK(privacy_phone_number IN ('everyone', 'my_contacts', 'nobody')),
    privacy_last_seen TEXT DEFAULT 'my_contacts' CHECK(privacy_last_seen IN ('everyone', 'my_contacts', 'nobody')),
    privacy_profile_photo TEXT DEFAULT 'everyone' CHECK(privacy_profile_photo IN ('everyone', 'my_contacts', 'nobody')),
    privacy_calls TEXT DEFAULT 'everyone' CHECK(privacy_calls IN ('everyone', 'my_contacts', 'nobody')),
    privacy_groups_and_channels TEXT DEFAULT 'everyone' CHECK(privacy_groups_and_channels IN ('everyone', 'my_contacts', 'nobody')),
    privacy_forwarded_messages TEXT DEFAULT 'everyone' CHECK(privacy_forwarded_messages IN ('everyone', 'my_contacts', 'nobody')),
    notifications_private_chats INTEGER DEFAULT 1 CHECK(notifications_private_chats IN (0,1)),
    notifications_group_chats INTEGER DEFAULT 1 CHECK(notifications_group_chats IN (0,1)),
    notifications_channels INTEGER DEFAULT 1 CHECK(notifications_channels IN (0,1)),
    notification_sound TEXT,
    chat_theme TEXT DEFAULT 'default',
    chat_text_size INTEGER DEFAULT 16,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Create indexes
CREATE INDEX idx_users_phone_number ON users(phone_number);
CREATE INDEX idx_users_username ON users(username);
CREATE INDEX idx_chats_public_link ON chats(public_link);
CREATE INDEX idx_chat_participants_chat_id ON chat_participants(chat_id);
CREATE INDEX idx_chat_participants_user_id ON chat_participants(user_id);
CREATE INDEX idx_messages_chat_id_sent_at ON messages(chat_id, sent_at);
CREATE INDEX idx_messages_sender_user_id ON messages(sender_user_id);
CREATE INDEX idx_messages_media_id ON messages(media_id);
CREATE INDEX idx_contacts_owner_user_id ON contacts(owner_user_id);
CREATE INDEX idx_contacts_contact_user_id ON contacts(contact_user_id);
CREATE INDEX idx_blocked_users_blocker ON blocked_users(blocker_user_id);
CREATE INDEX idx_blocked_users_blocked ON blocked_users(blocked_user_id);
CREATE INDEX idx_sessions_user_id ON sessions(user_id);
CREATE INDEX idx_sessions_last_active_at ON sessions(last_active_at);
CREATE INDEX idx_user_settings_user_id ON user_settings(user_id);



-- Verify data was inserted
SELECT 'Database setup complete' AS message;